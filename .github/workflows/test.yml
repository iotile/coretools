name: "Run tests"

on:
  pull_request:
    branches: [ master ]

jobs:
  test-linux:
    name: test linux py3${{ matrix.python-minor }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      max-parallel: 3
      matrix:
        python-minor: [6, 7, 8]

    steps:
      - name: Cancel duplicate jobs
        uses: styfle/cancel-workflow-action@0.9.0
        if: ${{ !env.ACT }}
      - name: Set up py3.${{ matrix.python-minor }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.${{ matrix.python-minor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi
          python -m pip install --upgrade pip && pip install --upgrade -r build_requirements.txt
      - name: Set up xPack QEMU ARM
        run: |
          wget https://github.com/xpack-dev-tools/qemu-arm-xpack/releases/download/v2.8.0-12/xpack-qemu-arm-2.8.0-12-linux-x64.tar.gz
          tar xzf xpack-qemu-arm-2.8.0-12-linux-x64.tar.gz
          echo "$(pwd)/xpack-qemu-arm-2.8.0-12/bin" >> $GITHUB_PATH
      - name: Check ARM toolkit versions
        run: |
          arm-none-eabi-gcc --version
          qemu-system-gnuarmeclipse --version
      - name: Run tests
        run: tox -r -e py3${{ matrix.python-minor }}-linux_only

  test-macOS:
    name: test macOS py3${{ matrix.python-minor }}
    runs-on: macos-10.15
    timeout-minutes: 30
    strategy:
      max-parallel: 3
      matrix:
        python-minor: [6, 7, 8]

    steps:
      - name: Cancel duplicate jobs
        uses: styfle/cancel-workflow-action@0.9.0
        if: ${{ !env.ACT }}
      - name: Set up py3.${{ matrix.python-minor }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.${{ matrix.python-minor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install ARM GCC with brew
        run: |
          brew tap PX4/px4
          brew install px4/px4/gcc-arm-none-eabi
          which arm-none-eabi-gcc

      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install --upgrade -r build_requirements.txt

      - name: Run tests
        run: tox -r -e py3${{ matrix.python-minor }}-mac_windows

  test-windows:
    name: test-windows py3${{ matrix.python-minor }}
    runs-on: windows-2019
    timeout-minutes: 15
    strategy:
      max-parallel: 3
      matrix:
        python-minor: [6, 7, 8]

    steps:
      - name: Cancel duplicate jobs
        uses: styfle/cancel-workflow-action@0.9.0
        if: ${{ !env.ACT }}
      - name: Set up py3.${{ matrix.python-minor }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.${{ matrix.python-minor }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare ARM GCC
        run: |
          mkdir c:\gcc
          curl -L -o gcc-arm-none-eabi.zip "https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2017q4/gcc-arm-none-eabi-7-2017-q4-major-win32.zip?revision=df1b65d3-7c8d-4e82-b114-e0b6ad7c2e6d?product=GNU%20Arm%20Embedded%20Toolchain,ZIP,,Windows,7-2017-q4-major"
          unzip -o gcc-arm-none-eabi.zip -d c:\gcc\
          echo c:\gcc\bin | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install --upgrade -r build_requirements.txt
      - name: Run tests
        run: tox -r -e py3${{ matrix.python-minor }}-mac_windows
