"""A centralized data management structure that allows multiple named FIFO streams.

SensorGraph is organized around data streams, which are named FIFOs that hold
readings.  For the purposes of embedding SensorGraph into a low resource setting
you can limit the number of readings stored in any given FIFO as needed to put
a hard cap on storage requirements.
"""


class SensorLog(object):
    """A storage engine holding multiple named FIFOs.

    Args:
        engine (StorageEngine): The engine used for storing
            persistent data generated by this sensor graph.
            This can either be a simple, in memory data store, or
            a more complicated persistent storage setup depending on
            needs.  If not specified, a temporary in memory engine
            is used.

        model (DeviceModel): An optional device model specifying the
            constraints of the device that we are emulating.  If not
            specified, no specific constraints are imposed on the sensor
            log.
    """

    def __init__(self, engine=None, model=None):
        self._monitors = {}
        self._virtual_walkers = []
        self._queue_walkers = []

        if engine is None:
            engine = InMemoryStorageEngine(model=model)

        self._engine = engine
        self._model = model

    def create_walker(self, selector):

